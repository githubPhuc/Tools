@model ToolsApp.EntityFramework.BaiViet
@{
    ViewBag.Title = "hinhAnh_View";
}
<style>
    .upload_dropZone {
        color: #0f3c4b;
        background-color: var(--colorPrimaryPale, #c8dadf);
        outline: 2px dashed var(--colorPrimaryHalf, #c1ddef);
        outline-offset: -12px;
        transition: outline-offset 0.2s ease-out, outline-color 0.3s ease-in-out, background-color 0.2s ease-out;
    }

        .upload_dropZone.highlight {
            outline-offset: -4px;
            outline-color: var(--colorPrimaryNormal, #0576bd);
            background-color: var(--colorPrimaryEighth, #c8dadf);
        }

    .upload_svg {
        fill: var(--colorPrimaryNormal, #0576bd);
    }

    .btn-upload {
        color: #fff;
        background-color: var(--colorPrimaryNormal);
    }

        .btn-upload:hover,
        .btn-upload:focus {
            color: #fff;
            background-color: var(--colorPrimaryGlare);
        }

    .upload_img {
        max-width: 450px;
        height: 300px;
        object-fit: contain;
    }

    .btn-del-img {
        font-weight: bold;
        background: #dc3545;
        opacity: 0.8;
        color: #fff;
        border-radius: 50%;
        padding: 3px 11px;
    }

        .btn-del-img:hover {
            cursor: pointer;
            opacity: 1;
        }

    .anhNha {
        cursor: pointer;
    }
</style>
<form>
    <fieldset class="upload_dropZone text-center mb-3 p-4">

        <legend class="visually-hidden pt-3 font-weight-bold">Thêm hình ảnh</legend>

        <svg class="upload_svg" width="60" height="60" aria-hidden="true">
            <use href="#icon-imageUpload"></use>
        </svg>

        <p class="small my-2">Kéo và thả một hoặc nhiều hình ảnh vào trong khung<br><i>hoặc</i></p>

        <input id="upload_image" data-post-name="files" data-id="@Model.id" data-post-url='@Url.Action("AddFilesToBaiViet")' class="position-absolute invisible" type="file" multiple accept="image/jpeg, image/png, image/svg+xml, application/pdf" />

        <label class="btn btn-upload mb-3" for="upload_image">Chọn ảnh</label>

        <div class="upload_gallery d-flex flex-wrap justify-content-center gap-3 mb-0">
            @if (ViewBag.urlPaths != null)
            {
                foreach (var p in ViewBag.urlPaths)
                {
                    var extension = System.IO.Path.GetExtension(p.UrlPath).ToLower();
                    <div class="anhNha d-flex flex-column">
                        @if (extension == ".pdf")
                        {
                            <a href="@Url.Content(p.UrlPath.ToString())" target="_blank" class="pdf-link">
                                <img src="~/Content/images/pdfImage.png" alt="" />
                                <span class="pdf-placeholder">PDF File</span>
                            </a>

                        }
                        else
                        {
                            <a href="@Url.Content(p.UrlPath)" data-fancybox="gallery">
                                <img class="upload_img p-1" loading="lazy" src="@Url.Content(p.UrlPath)" alt="Ảnh bài viết" />
                            </a>
                        }
                        <div>
                            <span class="btn-del-img mt-2" onclick="removeImage('@p.Id')">X</span>
                        </div>

                    </div>
                }
            }
        </div>
    </fieldset>

</form>


<svg style="display:none">
    <defs>
        <symbol id="icon-imageUpload" clip-rule="evenodd" viewBox="0 0 96 96">
            <path d="M47 6a21 21 0 0 0-12.3 3.8c-2.7 2.1-4.4 5-4.7 7.1-5.8 1.2-10.3 5.6-10.3 10.6 0 6 5.8 11 13 11h12.6V22.7l-7.1 6.8c-.4.3-.9.5-1.4.5-1 0-2-.8-2-1.7 0-.4.3-.9.6-1.2l10.3-8.8c.3-.4.8-.6 1.3-.6.6 0 1 .2 1.4.6l10.2 8.8c.4.3.6.8.6 1.2 0 1-.9 1.7-2 1.7-.5 0-1-.2-1.3-.5l-7.2-6.8v15.6h14.4c6.1 0 11.2-4.1 11.2-9.4 0-5-4-8.8-9.5-9.4C63.8 11.8 56 5.8 47 6Zm-1.7 42.7V38.4h3.4v10.3c0 .8-.7 1.5-1.7 1.5s-1.7-.7-1.7-1.5Z M27 49c-4 0-7 2-7 6v29c0 3 3 6 6 6h42c3 0 6-3 6-6V55c0-4-3-6-7-6H28Zm41 3c1 0 3 1 3 3v19l-13-6a2 2 0 0 0-2 0L44 79l-10-5a2 2 0 0 0-2 0l-9 7V55c0-2 2-3 4-3h41Z M40 62c0 2-2 4-5 4s-5-2-5-4 2-4 5-4 5 2 5 4Z" />
        </symbol>
    </defs>
</svg>
<script>
    (function () {

        'use strict';
        const preventDefaults = event => {
            event.preventDefault();
            event.stopPropagation();
        };
        const highlight = event =>
            event.target.classList.add('highlight');

        const unhighlight = event =>
            event.target.classList.remove('highlight');

        const getInputAndGalleryRefs = element => {
            const zone = element.closest('.upload_dropZone') || false;
            const gallery = zone.querySelector('.upload_gallery') || false;
            const input = zone.querySelector('input[type="file"]') || false;
            return { input: input, gallery: gallery };
        }

        const handleDrop = event => {
            const dataRefs = getInputAndGalleryRefs(event.target);
            dataRefs.files = event.dataTransfer.files;
            handleFiles(dataRefs);
        }
        const eventHandlers = zone => {
            const dataRefs = getInputAndGalleryRefs(zone);
            if (!dataRefs.input) return;
            // Prevent default drag behaviors
            ;['dragenter', 'dragover', 'dragleave', 'drop'].forEach(event => {
                zone.addEventListener(event, preventDefaults, false);
                document.body.addEventListener(event, preventDefaults, false);
            });
            // Highlighting drop area when item is dragged over it
            ;['dragenter', 'dragover'].forEach(event => {
                zone.addEventListener(event, highlight, false);
            });
            ;['dragleave', 'drop'].forEach(event => {
                zone.addEventListener(event, unhighlight, false);
            });
            // Handle dropped files
            zone.addEventListener('drop', handleDrop, false);
            // Handle browse selected files
            dataRefs.input.addEventListener('change', event => {
                dataRefs.files = event.target.files;
                handleFiles(dataRefs);
            }, false);

        }
        // Initialise ALL dropzones
        const dropZones = document.querySelectorAll('.upload_dropZone');
        for (const zone of dropZones) {
            eventHandlers(zone);
        }
        const isImageFile = file =>
            ['image/jpeg', 'image/png', 'image/svg+xml', 'application/pdf'].includes(file.type);

        const imageUpload = dataRefs => {
            var idBaiViet = $("#upload_image").data("id");
            if (!dataRefs.files || !dataRefs.input) return;

            const url = dataRefs.input.getAttribute('data-post-url');
            if (!url) return;

            const name = dataRefs.input.getAttribute('data-post-name');
            if (!name) return;
            console.log(dataRefs.files)
            const formData = new FormData();
            formData.append("id",idBaiViet)
            for (let i = 0; i < dataRefs.files.length; i++) {
                console.log(dataRefs.files[i]);
                formData.append(name, dataRefs.files[i]);
            }
            $.ajax({
                url: url,
                type: 'POST',
                data: formData,
                contentType: false,
                processData: false,
                success: function (data) {
                    if (data.success === true) {
                        loadHinhAnh();
                        @*console.log(data);
                        previewFiles(data);*@
                    } else {
                        console.log('URL: ', url, '  name: ', name);
                    }
                },
                error: function (error) {
                    console.error('errored: ', error);
                }
            });
        }
        const handleFiles = dataRefs => {
            let files = [...dataRefs.files];
            files = files.filter(item => {
                if (!isImageFile(item)) {
                    alert('File không hợp lệ', item.type);
                }
                return isImageFile(item) ? item : null;
            });
            if (!files.length) return;
            dataRefs.files = files;
            imageUpload(dataRefs);
        }

    })();
    function removeImage(Id) {
        if (Id == null) return;
        $.ajax({
            url: '@Url.Action("RemoveImage")',
            type: 'POST',
            data: {Id:Id},
            success: function (data) {
                if (data.success === true) {
                    notify("Xóa thành công", "success")
                    loadHinhAnh()
                    } else {
                    notify("Không thể xóa", "error")
                }
            },
            error: function (error) {
                notify(error);
            }
        });
    }

</script>