//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ToolsApp.EntityFramework
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class crmcustomscontext : DbContext
    {
        public crmcustomscontext()
            : base("name=crmcustomscontext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ChinhSach> ChinhSaches { get; set; }
        public virtual DbSet<Config> Configs { get; set; }
        public virtual DbSet<HinhAnh> HinhAnhs { get; set; }
        public virtual DbSet<HinhAnhBaiViet> HinhAnhBaiViets { get; set; }
        public virtual DbSet<KetCau> KetCaus { get; set; }
        public virtual DbSet<LogHistory> LogHistorys { get; set; }
        public virtual DbSet<Luong> Luongs { get; set; }
        public virtual DbSet<Menu> Menus { get; set; }
        public virtual DbSet<NhomBaiViet> NhomBaiViets { get; set; }
        public virtual DbSet<Page> Pages { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<UserAuthorization> UserAuthorizations { get; set; }
        public virtual DbSet<UserLuong> UserLuongs { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<BaiViet> BaiViets { get; set; }
    
        public virtual int insert_loghistory(Nullable<int> idUser, string ipUserHostAddress, string moTa, string moTaChiTiet)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("idUser", idUser) :
                new ObjectParameter("idUser", typeof(int));
    
            var ipUserHostAddressParameter = ipUserHostAddress != null ?
                new ObjectParameter("ipUserHostAddress", ipUserHostAddress) :
                new ObjectParameter("ipUserHostAddress", typeof(string));
    
            var moTaParameter = moTa != null ?
                new ObjectParameter("moTa", moTa) :
                new ObjectParameter("moTa", typeof(string));
    
            var moTaChiTietParameter = moTaChiTiet != null ?
                new ObjectParameter("moTaChiTiet", moTaChiTiet) :
                new ObjectParameter("moTaChiTiet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_loghistory", idUserParameter, ipUserHostAddressParameter, moTaParameter, moTaChiTietParameter);
        }
    }
}
